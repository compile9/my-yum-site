name: CD Pipeline for EC2 with Docker Compose

on:
  workflow_run:
    workflows: ["Build and Push Docker Images"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Tag variable
        run: echo "TAG=sha-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Substitute env variables in docker compose file before scp
        run: |
          envsubst < docker-compose.yml > docker-compose.tmp
          mv docker-compose.tmp docker-compose.yml
        env:
          DOCKERHUB_USERNAME: ${{ vars.DOCKER_USERNAME }}
          TAG: ${{ env.TAG }}

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
          USER: ${{ secrets.EC2_USER }}
          ENV: ${{ secrets.ENV_FILE}}
          DOCKERHUB_USER: ${{ vars.DOCKER_USERNAME }}
          DOCKERHUB_PASS: ${{ secrets.DOCKER_PASSWORD }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key docker-compose.yml ${USER}@${HOST}:/home/ubuntu/docker-compose.yml
          scp -o StrictHostKeyChecking=no -i private_key scripts/shell/docker-rebuild.sh ${USER}@${HOST}:/home/ubuntu/docker-rebuild.sh
          ssh -v -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} mkdir -p /home/ubuntu/src/main/resources/data/
          scp -v -r -o StrictHostKeyChecking=no -i private_key src/main/resources/data ${USER}@${HOST}:/home/ubuntu/src/main/resources/data/
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} << EOF
            echo "$ENV" > /home/ubuntu/.env
            chmod 600 /home/ubuntu/.env
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
            chmod +x /home/ubuntu/docker-rebuild.sh
            /home/ubuntu/docker-rebuild.sh
          EOF
          rm -f private_key
